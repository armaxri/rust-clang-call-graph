TranslationUnitDecl 0x14f848e08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14f849cf0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14f8493d0 '__int128'
|-TypedefDecl 0x14f849d60 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14f8493f0 'unsigned __int128'
|-TypedefDecl 0x14f832720 <<invalid sloc>> <invalid sloc> implicit __NSConstantString '__NSConstantString_tag'
| `-RecordType 0x14f832490 '__NSConstantString_tag'
|   `-CXXRecord 0x14f832400 '__NSConstantString_tag'
|-TypedefDecl 0x14f832788 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14f8495d0 '__SVInt8_t'
|-TypedefDecl 0x14f8327f0 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14f8495f0 '__SVInt16_t'
|-TypedefDecl 0x14f832858 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14f849610 '__SVInt32_t'
|-TypedefDecl 0x14f8328c0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14f849630 '__SVInt64_t'
|-TypedefDecl 0x14f832928 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14f849650 '__SVUint8_t'
|-TypedefDecl 0x14f832990 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14f849670 '__SVUint16_t'
|-TypedefDecl 0x14f8329f8 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14f849690 '__SVUint32_t'
|-TypedefDecl 0x14f832a60 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14f8496b0 '__SVUint64_t'
|-TypedefDecl 0x14f832ac8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14f8496d0 '__SVFloat16_t'
|-TypedefDecl 0x14f832b30 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14f8496f0 '__SVFloat32_t'
|-TypedefDecl 0x14f832b98 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14f849710 '__SVFloat64_t'
|-TypedefDecl 0x14f832c00 <<invalid sloc>> <invalid sloc> implicit __SVBFloat16_t '__SVBFloat16_t'
| `-BuiltinType 0x14f849730 '__SVBFloat16_t'
|-TypedefDecl 0x14f832c68 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14f849750 '__clang_svint8x2_t'
|-TypedefDecl 0x14f832cd0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14f849770 '__clang_svint16x2_t'
|-TypedefDecl 0x14f832d38 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14f849790 '__clang_svint32x2_t'
|-TypedefDecl 0x14f832da0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14f8497b0 '__clang_svint64x2_t'
|-TypedefDecl 0x14f832e08 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14f8497d0 '__clang_svuint8x2_t'
|-TypedefDecl 0x14f832e70 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14f8497f0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14f832ed8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14f849810 '__clang_svuint32x2_t'
|-TypedefDecl 0x14f832f40 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14f849830 '__clang_svuint64x2_t'
|-TypedefDecl 0x14f832fa8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14f849850 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14f833010 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14f849870 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14f833078 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14f849890 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14f8330e0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14f8498b0 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14f833148 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14f8498d0 '__clang_svint8x3_t'
|-TypedefDecl 0x14f8331b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14f8498f0 '__clang_svint16x3_t'
|-TypedefDecl 0x14f833218 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14f849910 '__clang_svint32x3_t'
|-TypedefDecl 0x14f833280 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14f849930 '__clang_svint64x3_t'
|-TypedefDecl 0x14f8332e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14f849950 '__clang_svuint8x3_t'
|-TypedefDecl 0x14f833350 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14f849970 '__clang_svuint16x3_t'
|-TypedefDecl 0x14f904800 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14f849990 '__clang_svuint32x3_t'
|-TypedefDecl 0x14f904868 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14f8499b0 '__clang_svuint64x3_t'
|-TypedefDecl 0x14f9048d0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14f8499d0 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14f904938 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14f8499f0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14f9049a0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14f849a10 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14f904a08 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14f849a30 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14f904a70 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14f849a50 '__clang_svint8x4_t'
|-TypedefDecl 0x14f904ad8 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14f849a70 '__clang_svint16x4_t'
|-TypedefDecl 0x14f904b40 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14f849a90 '__clang_svint32x4_t'
|-TypedefDecl 0x14f904ba8 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14f849ab0 '__clang_svint64x4_t'
|-TypedefDecl 0x14f904c10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14f849ad0 '__clang_svuint8x4_t'
|-TypedefDecl 0x14f904c78 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14f849af0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14f904ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14f849b10 '__clang_svuint32x4_t'
|-TypedefDecl 0x14f904d48 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14f849b30 '__clang_svuint64x4_t'
|-TypedefDecl 0x14f904db0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14f849b50 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14f904e18 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14f849b70 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14f904e80 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14f849b90 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14f904ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14f849bb0 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14f904f50 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14f849bd0 '__SVBool_t'
|-TypedefDecl 0x14f904fb8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14f849bf0 '__clang_svboolx2_t'
|-TypedefDecl 0x14f905020 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14f849c10 '__clang_svboolx4_t'
|-TypedefDecl 0x14f905088 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14f849c30 '__SVCount_t'
|-TypedefDecl 0x14f905128 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14f9050e0 'char *'
|   `-BuiltinType 0x14f848eb0 'char'
|-TypedefDecl 0x14f905198 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14f9050e0 'char *'
|   `-BuiltinType 0x14f848eb0 'char'
|-CXXRecordDecl 0x14f9051f0 <./tests/playground/simpleCppClasses/classRawPointerCall/file.cpp:1:1, line:8:1> line:1:7 referenced class TestClass definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |-CXXRecordDecl 0x14f905308 <col:1, col:7> col:7 implicit class TestClass
| |-AccessSpecDecl 0x14f905398 <line:3:3, col:9> col:3 public
| |-CXXMethodDecl 0x14f905560 <line:4:5, line:7:5> line:4:9 used add 'int (int, int)' implicit-inline
| | |-ParmVarDecl 0x14f9053d8 <col:13, col:17> col:17 used val1 'int'
| | |-ParmVarDecl 0x14f905458 <col:23, col:27> col:27 used val2 'int'
| | `-CompoundStmt 0x14f9056d0 <line:5:5, line:7:5>
| |   `-ReturnStmt 0x14f9056c0 <line:6:9, col:23>
| |     `-BinaryOperator 0x14f9056a0 <col:16, col:23> 'int' '+'
| |       |-ImplicitCastExpr 0x14f905670 <col:16> 'int' <LValueToRValue>
| |       | `-DeclRefExpr 0x14f905630 <col:16> 'int' lvalue ParmVar 0x14f9053d8 'val1' 'int'
| |       `-ImplicitCastExpr 0x14f905688 <col:23> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x14f905650 <col:23> 'int' lvalue ParmVar 0x14f905458 'val2' 'int'
| |-CXXConstructorDecl 0x14f925f10 <line:1:7> col:7 implicit referenced constexpr TestClass 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x14f926048 <col:7> col:7 implicit constexpr TestClass 'void (const TestClass &)' inline default trivial noexcept-unevaluated 0x14f926048
| | `-ParmVarDecl 0x14f926168 <col:7> col:7 'const TestClass &'
| `-CXXConstructorDecl 0x14f926218 <col:7> col:7 implicit constexpr TestClass 'void (TestClass &&)' inline default trivial noexcept-unevaluated 0x14f926218
|   `-ParmVarDecl 0x14f926338 <col:7> col:7 'TestClass &&'
|-FunctionDecl 0x14f923b50 <line:10:1, line:14:1> line:10:5 main 'int (int, char **)'
| |-ParmVarDecl 0x14f905700 <col:10, col:14> col:14 argc 'int'
| |-ParmVarDecl 0x14f923a30 <col:20, col:31> col:26 argv 'char **':'char **'
| `-CompoundStmt 0x14f926670 <line:11:1, line:14:1>
|   |-DeclStmt 0x14f926570 <line:12:5, col:32>
|   | `-VarDecl 0x14f923cc0 <col:5, col:31> col:10 used test 'TestClass *':'TestClass *' cinit
|   |   `-CXXNewExpr 0x14f926410 <col:17, col:31> 'TestClass *' Function 0x14f9240a0 'operator new' 'void *(unsigned long)'
|   |     `-CXXConstructExpr 0x14f9263e8 <col:21, col:31> 'TestClass':'TestClass' 'void () noexcept' zeroing
|   `-ReturnStmt 0x14f926660 <line:13:5, col:26>
|     `-CXXMemberCallExpr 0x14f926630 <col:12, col:26> 'int'
|       |-MemberExpr 0x14f9265c0 <col:12, col:18> '<bound member function type>' ->add 0x14f905560
|       | `-ImplicitCastExpr 0x14f9265a8 <col:12> 'TestClass *':'TestClass *' <LValueToRValue>
|       |   `-DeclRefExpr 0x14f926588 <col:12> 'TestClass *':'TestClass *' lvalue Var 0x14f923cc0 'test' 'TestClass *':'TestClass *'
|       |-IntegerLiteral 0x14f9265f0 <col:22> 'int' 1
|       `-IntegerLiteral 0x14f926610 <col:25> 'int' 2
|-FunctionDecl 0x14f9240a0 <<invalid sloc>> <invalid sloc> implicit used operator new 'void *(unsigned long)'
| |-ParmVarDecl 0x14f9241a0 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| |-VisibilityAttr 0x14f924148 <<invalid sloc>> Implicit Default
| |-ReturnsNonNullAttr 0x14f924210 <<invalid sloc>> Implicit
| `-AllocSizeAttr 0x14f924238 <<invalid sloc>> Implicit 1
|-FunctionDecl 0x14f9242a8 <<invalid sloc>> <invalid sloc> implicit operator new 'void *(unsigned long, std::align_val_t)'
| |-ParmVarDecl 0x14f9243a8 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| |-ParmVarDecl 0x14f924410 <<invalid sloc>> <invalid sloc> implicit 'std::align_val_t'
| |-VisibilityAttr 0x14f924350 <<invalid sloc>> Implicit Default
| |-ReturnsNonNullAttr 0x14f924488 <<invalid sloc>> Implicit
| |-AllocSizeAttr 0x14f9244b0 <<invalid sloc>> Implicit 1
| `-AllocAlignAttr 0x14f9244e0 <<invalid sloc>> Implicit 2
|-FunctionDecl 0x14f924518 <<invalid sloc>> <invalid sloc> implicit operator new[] 'void *(unsigned long)'
| |-ParmVarDecl 0x14f924618 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| |-VisibilityAttr 0x14f9245c0 <<invalid sloc>> Implicit Default
| |-ReturnsNonNullAttr 0x14f924688 <<invalid sloc>> Implicit
| `-AllocSizeAttr 0x14f9246b0 <<invalid sloc>> Implicit 1
|-FunctionDecl 0x14f9246e0 <<invalid sloc>> <invalid sloc> implicit operator new[] 'void *(unsigned long, std::align_val_t)'
| |-ParmVarDecl 0x14f9247e0 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| |-ParmVarDecl 0x14f924848 <<invalid sloc>> <invalid sloc> implicit 'std::align_val_t'
| |-VisibilityAttr 0x14f924788 <<invalid sloc>> Implicit Default
| |-ReturnsNonNullAttr 0x14f9248c0 <<invalid sloc>> Implicit
| |-AllocSizeAttr 0x14f9248e8 <<invalid sloc>> Implicit 1
| `-AllocAlignAttr 0x14f924918 <<invalid sloc>> Implicit 2
|-FunctionDecl 0x14f925800 <<invalid sloc>> <invalid sloc> implicit used operator delete 'void (void *) noexcept'
| |-ParmVarDecl 0x14f925900 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x14f9258a8 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x14f9259a8 <<invalid sloc>> <invalid sloc> implicit operator delete 'void (void *, std::align_val_t) noexcept'
| |-ParmVarDecl 0x14f925aa8 <<invalid sloc>> <invalid sloc> implicit 'void *'
| |-ParmVarDecl 0x14f925b10 <<invalid sloc>> <invalid sloc> implicit 'std::align_val_t'
| `-VisibilityAttr 0x14f925a50 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x14f925b98 <<invalid sloc>> <invalid sloc> implicit operator delete[] 'void (void *) noexcept'
| |-ParmVarDecl 0x14f925c98 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x14f925c40 <<invalid sloc>> Implicit Default
`-FunctionDecl 0x14f925d08 <<invalid sloc>> <invalid sloc> implicit operator delete[] 'void (void *, std::align_val_t) noexcept'
  |-ParmVarDecl 0x14f925e08 <<invalid sloc>> <invalid sloc> implicit 'void *'
  |-ParmVarDecl 0x14f925e70 <<invalid sloc>> <invalid sloc> implicit 'std::align_val_t'
  `-VisibilityAttr 0x14f925db0 <<invalid sloc>> Implicit Default
