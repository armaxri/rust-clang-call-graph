TranslationUnitDecl 0x150048808 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1500496f0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x150048dd0 '__int128'
|-TypedefDecl 0x150049760 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x150048df0 'unsigned __int128'
|-TypedefDecl 0x150032120 <<invalid sloc>> <invalid sloc> implicit __NSConstantString '__NSConstantString_tag'
| `-RecordType 0x150031e90 '__NSConstantString_tag'
|   `-CXXRecord 0x150031e00 '__NSConstantString_tag'
|-TypedefDecl 0x150032188 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x150048fd0 '__SVInt8_t'
|-TypedefDecl 0x1500321f0 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x150048ff0 '__SVInt16_t'
|-TypedefDecl 0x150032258 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x150049010 '__SVInt32_t'
|-TypedefDecl 0x1500322c0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x150049030 '__SVInt64_t'
|-TypedefDecl 0x150032328 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x150049050 '__SVUint8_t'
|-TypedefDecl 0x150032390 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x150049070 '__SVUint16_t'
|-TypedefDecl 0x1500323f8 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x150049090 '__SVUint32_t'
|-TypedefDecl 0x150032460 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x1500490b0 '__SVUint64_t'
|-TypedefDecl 0x1500324c8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x1500490d0 '__SVFloat16_t'
|-TypedefDecl 0x150032530 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x1500490f0 '__SVFloat32_t'
|-TypedefDecl 0x150032598 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x150049110 '__SVFloat64_t'
|-TypedefDecl 0x150032600 <<invalid sloc>> <invalid sloc> implicit __SVBFloat16_t '__SVBFloat16_t'
| `-BuiltinType 0x150049130 '__SVBFloat16_t'
|-TypedefDecl 0x150032668 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x150049150 '__clang_svint8x2_t'
|-TypedefDecl 0x1500326d0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x150049170 '__clang_svint16x2_t'
|-TypedefDecl 0x150032738 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x150049190 '__clang_svint32x2_t'
|-TypedefDecl 0x1500327a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x1500491b0 '__clang_svint64x2_t'
|-TypedefDecl 0x150032808 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x1500491d0 '__clang_svuint8x2_t'
|-TypedefDecl 0x150032870 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x1500491f0 '__clang_svuint16x2_t'
|-TypedefDecl 0x1500328d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x150049210 '__clang_svuint32x2_t'
|-TypedefDecl 0x150032940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x150049230 '__clang_svuint64x2_t'
|-TypedefDecl 0x1500329a8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x150049250 '__clang_svfloat16x2_t'
|-TypedefDecl 0x150032a10 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x150049270 '__clang_svfloat32x2_t'
|-TypedefDecl 0x150032a78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x150049290 '__clang_svfloat64x2_t'
|-TypedefDecl 0x150032ae0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x1500492b0 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x150032b48 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x1500492d0 '__clang_svint8x3_t'
|-TypedefDecl 0x150032bb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x1500492f0 '__clang_svint16x3_t'
|-TypedefDecl 0x150032c18 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x150049310 '__clang_svint32x3_t'
|-TypedefDecl 0x150032c80 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x150049330 '__clang_svint64x3_t'
|-TypedefDecl 0x150032ce8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x150049350 '__clang_svuint8x3_t'
|-TypedefDecl 0x150032d50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x150049370 '__clang_svuint16x3_t'
|-TypedefDecl 0x150103e00 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x150049390 '__clang_svuint32x3_t'
|-TypedefDecl 0x150103e68 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x1500493b0 '__clang_svuint64x3_t'
|-TypedefDecl 0x150103ed0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x1500493d0 '__clang_svfloat16x3_t'
|-TypedefDecl 0x150103f38 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x1500493f0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x150103fa0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x150049410 '__clang_svfloat64x3_t'
|-TypedefDecl 0x150104008 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x150049430 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x150104070 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x150049450 '__clang_svint8x4_t'
|-TypedefDecl 0x1501040d8 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x150049470 '__clang_svint16x4_t'
|-TypedefDecl 0x150104140 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x150049490 '__clang_svint32x4_t'
|-TypedefDecl 0x1501041a8 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x1500494b0 '__clang_svint64x4_t'
|-TypedefDecl 0x150104210 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x1500494d0 '__clang_svuint8x4_t'
|-TypedefDecl 0x150104278 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x1500494f0 '__clang_svuint16x4_t'
|-TypedefDecl 0x1501042e0 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x150049510 '__clang_svuint32x4_t'
|-TypedefDecl 0x150104348 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x150049530 '__clang_svuint64x4_t'
|-TypedefDecl 0x1501043b0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x150049550 '__clang_svfloat16x4_t'
|-TypedefDecl 0x150104418 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x150049570 '__clang_svfloat32x4_t'
|-TypedefDecl 0x150104480 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x150049590 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1501044e8 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x1500495b0 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x150104550 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x1500495d0 '__SVBool_t'
|-TypedefDecl 0x1501045b8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x1500495f0 '__clang_svboolx2_t'
|-TypedefDecl 0x150104620 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x150049610 '__clang_svboolx4_t'
|-TypedefDecl 0x150104688 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x150049630 '__SVCount_t'
|-TypedefDecl 0x150104728 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1501046e0 'char *'
|   `-BuiltinType 0x1500488b0 'char'
|-TypedefDecl 0x150104798 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1501046e0 'char *'
|   `-BuiltinType 0x1500488b0 'char'
|-CXXRecordDecl 0x1501047f0 <./tests/playground/simple_cpp_classes/method_impl_outside/file.cpp:1:1, line:5:1> line:1:7 referenced class TestClass definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |-CXXRecordDecl 0x150104908 <col:1, col:7> col:7 implicit class TestClass
| |-AccessSpecDecl 0x150104998 <line:3:3, col:9> col:3 public
| |-CXXMethodDecl 0x150104b60 <line:4:5, col:31> col:9 used add 'int (int, int)'
| | |-ParmVarDecl 0x1501049d8 <col:13, col:17> col:17 val1 'int'
| | `-ParmVarDecl 0x150104a58 <col:23, col:27> col:27 val2 'int'
| |-CXXConstructorDecl 0x1501235e0 <line:1:7> col:7 implicit used constexpr TestClass 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x150123ab8 <col:7>
| |-CXXConstructorDecl 0x150123718 <col:7> col:7 implicit constexpr TestClass 'void (const TestClass &)' inline default trivial noexcept-unevaluated 0x150123718
| | `-ParmVarDecl 0x150123838 <col:7> col:7 'const TestClass &'
| `-CXXConstructorDecl 0x1501238e8 <col:7> col:7 implicit constexpr TestClass 'void (TestClass &&)' inline default trivial noexcept-unevaluated 0x1501238e8
|   `-ParmVarDecl 0x150123a08 <col:7> col:7 'TestClass &&'
|-CXXMethodDecl 0x150123000 parent 0x1501047f0 prev 0x150104b60 <line:7:1, line:10:1> line:7:16 used add 'int (int, int)'
| |-ParmVarDecl 0x150104c68 <col:20, col:24> col:24 used val1 'int'
| |-ParmVarDecl 0x150104ce8 <col:30, col:34> col:34 used val2 'int'
| `-CompoundStmt 0x1501231a8 <line:8:1, line:10:1>
|   `-ReturnStmt 0x150123198 <line:9:5, col:19>
|     `-BinaryOperator 0x150123178 <col:12, col:19> 'int' '+'
|       |-ImplicitCastExpr 0x150123148 <col:12> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x150123108 <col:12> 'int' lvalue ParmVar 0x150104c68 'val1' 'int'
|       `-ImplicitCastExpr 0x150123160 <col:19> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x150123128 <col:19> 'int' lvalue ParmVar 0x150104ce8 'val2' 'int'
`-FunctionDecl 0x150123420 <line:12:1, line:16:1> line:12:5 main 'int (int, char **)'
  |-ParmVarDecl 0x1501231d8 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x150123300 <col:20, col:31> col:26 argv 'char **':'char **'
  `-CompoundStmt 0x150123cd0 <line:13:1, line:16:1>
    |-DeclStmt 0x150123be8 <line:14:5, col:19>
    | `-VarDecl 0x150123560 <col:5, col:15> col:15 used test 'TestClass':'TestClass' callinit
    |   `-CXXConstructExpr 0x150123bc0 <col:15> 'TestClass':'TestClass' 'void () noexcept'
    `-ReturnStmt 0x150123cc0 <line:15:5, col:25>
      `-CXXMemberCallExpr 0x150123c90 <col:12, col:25> 'int'
        |-MemberExpr 0x150123c20 <col:12, col:17> '<bound member function type>' .add 0x150123000
        | `-DeclRefExpr 0x150123c00 <col:12> 'TestClass':'TestClass' lvalue Var 0x150123560 'test' 'TestClass':'TestClass'
        |-IntegerLiteral 0x150123c50 <col:21> 'int' 1
        `-IntegerLiteral 0x150123c70 <col:24> 'int' 2
