TranslationUnitDecl 0x14b048e08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x14b049cf0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x14b0493d0 '__int128'
|-TypedefDecl 0x14b049d60 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x14b0493f0 'unsigned __int128'
|-TypedefDecl 0x14b80d120 <<invalid sloc>> <invalid sloc> implicit __NSConstantString '__NSConstantString_tag'
| `-RecordType 0x14b80ce90 '__NSConstantString_tag'
|   `-CXXRecord 0x14b80ce00 '__NSConstantString_tag'
|-TypedefDecl 0x14b80d188 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x14b0495d0 '__SVInt8_t'
|-TypedefDecl 0x14b80d1f0 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x14b0495f0 '__SVInt16_t'
|-TypedefDecl 0x14b80d258 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x14b049610 '__SVInt32_t'
|-TypedefDecl 0x14b80d2c0 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x14b049630 '__SVInt64_t'
|-TypedefDecl 0x14b80d328 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x14b049650 '__SVUint8_t'
|-TypedefDecl 0x14b80d390 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x14b049670 '__SVUint16_t'
|-TypedefDecl 0x14b80d3f8 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x14b049690 '__SVUint32_t'
|-TypedefDecl 0x14b80d460 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x14b0496b0 '__SVUint64_t'
|-TypedefDecl 0x14b80d4c8 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x14b0496d0 '__SVFloat16_t'
|-TypedefDecl 0x14b80d530 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x14b0496f0 '__SVFloat32_t'
|-TypedefDecl 0x14b80d598 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x14b049710 '__SVFloat64_t'
|-TypedefDecl 0x14b80d600 <<invalid sloc>> <invalid sloc> implicit __SVBFloat16_t '__SVBFloat16_t'
| `-BuiltinType 0x14b049730 '__SVBFloat16_t'
|-TypedefDecl 0x14b80d668 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x14b049750 '__clang_svint8x2_t'
|-TypedefDecl 0x14b80d6d0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x14b049770 '__clang_svint16x2_t'
|-TypedefDecl 0x14b80d738 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x14b049790 '__clang_svint32x2_t'
|-TypedefDecl 0x14b80d7a0 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x14b0497b0 '__clang_svint64x2_t'
|-TypedefDecl 0x14b80d808 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x14b0497d0 '__clang_svuint8x2_t'
|-TypedefDecl 0x14b80d870 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x14b0497f0 '__clang_svuint16x2_t'
|-TypedefDecl 0x14b80d8d8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x14b049810 '__clang_svuint32x2_t'
|-TypedefDecl 0x14b80d940 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x14b049830 '__clang_svuint64x2_t'
|-TypedefDecl 0x14b80d9a8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x14b049850 '__clang_svfloat16x2_t'
|-TypedefDecl 0x14b80da10 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x14b049870 '__clang_svfloat32x2_t'
|-TypedefDecl 0x14b80da78 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x14b049890 '__clang_svfloat64x2_t'
|-TypedefDecl 0x14b80dae0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x14b0498b0 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x14b80db48 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x14b0498d0 '__clang_svint8x3_t'
|-TypedefDecl 0x14b80dbb0 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x14b0498f0 '__clang_svint16x3_t'
|-TypedefDecl 0x14b80dc18 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x14b049910 '__clang_svint32x3_t'
|-TypedefDecl 0x14b80dc80 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x14b049930 '__clang_svint64x3_t'
|-TypedefDecl 0x14b80dce8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x14b049950 '__clang_svuint8x3_t'
|-TypedefDecl 0x14b80dd50 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x14b049970 '__clang_svuint16x3_t'
|-TypedefDecl 0x14b810600 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x14b049990 '__clang_svuint32x3_t'
|-TypedefDecl 0x14b810668 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x14b0499b0 '__clang_svuint64x3_t'
|-TypedefDecl 0x14b8106d0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x14b0499d0 '__clang_svfloat16x3_t'
|-TypedefDecl 0x14b810738 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x14b0499f0 '__clang_svfloat32x3_t'
|-TypedefDecl 0x14b8107a0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x14b049a10 '__clang_svfloat64x3_t'
|-TypedefDecl 0x14b810808 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x14b049a30 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x14b810870 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x14b049a50 '__clang_svint8x4_t'
|-TypedefDecl 0x14b8108d8 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x14b049a70 '__clang_svint16x4_t'
|-TypedefDecl 0x14b810940 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x14b049a90 '__clang_svint32x4_t'
|-TypedefDecl 0x14b8109a8 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x14b049ab0 '__clang_svint64x4_t'
|-TypedefDecl 0x14b810a10 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x14b049ad0 '__clang_svuint8x4_t'
|-TypedefDecl 0x14b810a78 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x14b049af0 '__clang_svuint16x4_t'
|-TypedefDecl 0x14b810ae0 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x14b049b10 '__clang_svuint32x4_t'
|-TypedefDecl 0x14b810b48 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x14b049b30 '__clang_svuint64x4_t'
|-TypedefDecl 0x14b810bb0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x14b049b50 '__clang_svfloat16x4_t'
|-TypedefDecl 0x14b810c18 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x14b049b70 '__clang_svfloat32x4_t'
|-TypedefDecl 0x14b810c80 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x14b049b90 '__clang_svfloat64x4_t'
|-TypedefDecl 0x14b810ce8 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x14b049bb0 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x14b810d50 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x14b049bd0 '__SVBool_t'
|-TypedefDecl 0x14b810db8 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x14b049bf0 '__clang_svboolx2_t'
|-TypedefDecl 0x14b810e20 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x14b049c10 '__clang_svboolx4_t'
|-TypedefDecl 0x14b810e88 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x14b049c30 '__SVCount_t'
|-TypedefDecl 0x14b810f28 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x14b810ee0 'char *'
|   `-BuiltinType 0x14b048eb0 'char'
|-TypedefDecl 0x14b810f98 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x14b810ee0 'char *'
|   `-BuiltinType 0x14b048eb0 'char'
|-CXXRecordDecl 0x14b810ff0 <./tests/playground/simple_cpp_classes/virtual_method/file.cpp:1:1, line:9:1> line:1:7 referenced class TestClass definition
| |-DefinitionData polymorphic literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial constexpr defaulted_is_constexpr
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial
| | |-CopyAssignment simple non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial
| | `-Destructor simple irrelevant trivial constexpr
| |-CXXRecordDecl 0x14b811108 <col:1, col:7> col:7 implicit class TestClass
| |-AccessSpecDecl 0x14b811198 <line:3:3, col:9> col:3 public
| |-CXXMethodDecl 0x14b811360 <line:4:5, line:7:5> line:4:17 used add 'int (int, int)' virtual implicit-inline
| | |-ParmVarDecl 0x14b8111d8 <col:21, col:25> col:25 used val1 'int'
| | |-ParmVarDecl 0x14b811258 <col:31, col:35> col:35 used val2 'int'
| | `-CompoundStmt 0x14b830580 <line:5:5, line:7:5>
| |   `-ReturnStmt 0x14b830570 <line:6:9, col:23>
| |     `-BinaryOperator 0x14b830550 <col:16, col:23> 'int' '+'
| |       |-ImplicitCastExpr 0x14b830520 <col:16> 'int' <LValueToRValue>
| |       | `-DeclRefExpr 0x14b8304e0 <col:16> 'int' lvalue ParmVar 0x14b8111d8 'val1' 'int'
| |       `-ImplicitCastExpr 0x14b830538 <col:23> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x14b830500 <col:23> 'int' lvalue ParmVar 0x14b811258 'val2' 'int'
| |-CXXMethodDecl 0x14b811550 <line:8:5, col:39> col:17 used sub 'int (int, int)' virtual
| | |-ParmVarDecl 0x14b811430 <col:21, col:25> col:25 val1 'int'
| | `-ParmVarDecl 0x14b8114b0 <col:31, col:35> col:35 val2 'int'
| |-CXXMethodDecl 0x14b830080 <line:1:7> col:7 implicit constexpr operator= 'TestClass &(const TestClass &)' inline default noexcept-unevaluated 0x14b830080
| | `-ParmVarDecl 0x14b830198 <col:7> col:7 'const TestClass &'
| |-CXXMethodDecl 0x14b830238 <col:7> col:7 implicit constexpr operator= 'TestClass &(TestClass &&)' inline default noexcept-unevaluated 0x14b830238
| | `-ParmVarDecl 0x14b830348 <col:7> col:7 'TestClass &&'
| |-CXXDestructorDecl 0x14b8303c8 <col:7> col:7 implicit constexpr ~TestClass 'void ()' inline default trivial noexcept-unevaluated 0x14b8303c8
| |-CXXConstructorDecl 0x14b8309c0 <col:7> col:7 implicit used constexpr TestClass 'void () noexcept' inline default
| | `-CompoundStmt 0x14b830ef8 <col:7>
| |-CXXConstructorDecl 0x14b830aa0 <col:7> col:7 implicit constexpr TestClass 'void (const TestClass &)' inline default noexcept-unevaluated 0x14b830aa0
| | `-ParmVarDecl 0x14b830bb8 <col:7> col:7 'const TestClass &'
| `-CXXConstructorDecl 0x14b830c38 <col:7> col:7 implicit constexpr TestClass 'void (TestClass &&)' inline default noexcept-unevaluated 0x14b830c38
|   `-ParmVarDecl 0x14b830d58 <col:7> col:7 'TestClass &&'
`-FunctionDecl 0x14b830800 <line:11:1, line:15:1> line:11:5 main 'int (int, char **)'
  |-ParmVarDecl 0x14b8305b0 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x14b8306e0 <col:20, col:31> col:26 argv 'char **':'char **'
  `-CompoundStmt 0x14b832348 <line:12:1, line:15:1>
    |-DeclStmt 0x14b830f30 <line:13:5, col:19>
    | `-VarDecl 0x14b830940 <col:5, col:15> col:15 used test 'TestClass':'TestClass' callinit
    |   `-CXXConstructExpr 0x14b830f08 <col:15> 'TestClass':'TestClass' 'void () noexcept'
    `-ReturnStmt 0x14b832338 <line:14:5, col:42>
      `-BinaryOperator 0x14b8322f0 <col:12, col:42> 'int' '+'
        |-CXXMemberCallExpr 0x14b832200 <col:12, col:25> 'int'
        | |-MemberExpr 0x14b830f68 <col:12, col:17> '<bound member function type>' .add 0x14b811360
        | | `-DeclRefExpr 0x14b830f48 <col:12> 'TestClass':'TestClass' lvalue Var 0x14b830940 'test' 'TestClass':'TestClass'
        | |-IntegerLiteral 0x14b830f98 <col:21> 'int' 1
        | `-IntegerLiteral 0x14b830fb8 <col:24> 'int' 2
        `-CXXMemberCallExpr 0x14b8322c0 <col:29, col:42> 'int'
          |-MemberExpr 0x14b832250 <col:29, col:34> '<bound member function type>' .sub 0x14b811550
          | `-DeclRefExpr 0x14b832230 <col:29> 'TestClass':'TestClass' lvalue Var 0x14b830940 'test' 'TestClass':'TestClass'
          |-IntegerLiteral 0x14b832280 <col:38> 'int' 1
          `-IntegerLiteral 0x14b8322a0 <col:41> 'int' 2
